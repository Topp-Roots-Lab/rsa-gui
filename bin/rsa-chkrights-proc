#!/bin/sh

################################################################################
## Check ownership and permissions for files and directories inside
##          /data/rsa/processed_images
##
## Originally created by Mikhail Kovtun <mikhail.kovtun@duke.edu> 
##
## Fri May 31 2013  Vladimir Popov <vladimir.popov@duke.edu> 
##
################################################################################

echo
echo "=== Checking ownership and permissions for /data/rsa/processed_images/* ==="
echo "Current user is $USER"
echo

#-------------------------------------------------------------------------------
# Test whether the current user is member of 'rootarch' group (or is 'root')

# Function: test whether the current user is a member of specified group
function isMember {
    groupname=$1
    usergroups=(`groups`)
    for g in ${usergroups[@]}; do
        if [ "$groupname" = "$g" ]; then return 0; fi
    done
    return 1
}

if ! isMember "rootarch" && [ "$USER" != "root" ]; then
    echo "ERROR: This script can be executed only by memebers of 'rootarch' group."
    exit 1
fi
#-------------------------------------------------------------------------------

workdir="/data/rsa/processed_images"

wd="$workdir -mindepth 1"
wdd="$wd -type d"
wdf="$wd -type f"
dpr="! -perm 0750 ! -perm 2750 ! -perm 0770 ! -perm 2770"
dpw="! -perm 0770 ! -perm 2770"
fpr="! -perm 0640 ! -perm 0660"
fpw="! -perm 0660"

# First, test whether 'workdir' directory is readable at all
if [ ! -r $workdir ]; then
    echo "ERROR: you have no read access to $workdir."
    echo "This is a severe problem -- contact your system administrator."
    return 1
fi

# Report unreadable directories first
dirs_unreadable=`find $wd -false 2>&1 | wc -l`
if [ $dirs_unreadable -gt 0 ]; then
    echo
    echo "NOTE: $dirs_unreadable subdirectories cannot be read by you."
    echo "      The following data do not include these directories."
    echo
fi

# Report totals
dirs_total=`find  $wdd      2>/dev/null | wc -l`
files_total=`find $wdf      2>/dev/null | wc -l`
echo "$workdir contains $dirs_total subdirectories and $files_total files."
echo

# Report totals for the current user
dirs_user=`find  $wdd -user $USER   2>/dev/null | wc -l`
files_user=`find $wdf -user $USER   2>/dev/null | wc -l`
echo "You own $dirs_user subdirectories and $files_user files."

# Find and report problems created by the current user to the other users
dirs_user_not_rsa=`find  $wdd -user $USER ! -group rootarch 2>/dev/null | wc -l`
files_user_not_rsa=`find $wdf -user $USER ! -group rootarch 2>/dev/null | wc -l`

dirs_user_bad_perm=`find   $wdd -user $USER $dpr  2>/dev/null | wc -l`
files_user_bad_perm=`find  $wdf -user $USER $fpr  2>/dev/null | wc -l`

dirs_user_ro=`find   $wdd -user $USER $dpw  2>/dev/null | wc -l`
files_user_ro=`find  $wdf -user $USER $fpw  2>/dev/null | wc -l`

let user_not_rsa=$dirs_user_not_rsa+$files_user_not_rsa
let user_bad_perm=$dirs_user_bad_perm+$files_user_bad_perm
let user_ro=$dirs_user_ro+$files_user_ro

let user_problems=$user_not_rsa+$user_bad_perm+$user_ro

if [ $user_problems -gt 0 ]; then
    echo "Your files and directories have the following problems:"
    if [ $user_not_rsa -gt 0 ]; then
        echo "    $dirs_user_not_rsa directories and $files_user_not_rsa files are not owned by group 'rootarch'."
    fi
    if [ $user_bad_perm -gt 0 ]; then
        echo "    $dirs_user_bad_perm directories and $files_user_bad_perm files have incorrect permissions."
    fi
    if [ $user_ro -gt 0 ]; then
        echo "    $dirs_user_ro directories and $files_user_ro files are not writable by other users."
    fi
    echo "Please run 'rsa-setrights-proc' script to correct these problems."
else
    echo "Your files and directories are OK."
fi
echo 

# Report totals for the other users
dirs_other=`find  $wdd ! -user $USER   2>/dev/null | wc -l`
files_other=`find $wdf ! -user $USER   2>/dev/null | wc -l`
echo "Other users own $dirs_other subdirectories and $files_other files."

# Find and report problems created by the other users to the current user
dirs_other_not_rsa=`find  $wdd ! -user $USER ! -group rootarch 2>/dev/null | wc -l`
files_other_not_rsa=`find $wdf ! -user $USER ! -group rootarch 2>/dev/null | wc -l`

dirs_other_bad_perm=`find   $wdd ! -user $USER $dpr  2>/dev/null | wc -l`
files_other_bad_perm=`find  $wdf ! -user $USER $fpr  2>/dev/null | wc -l`

dirs_other_ro=`find   $wdd ! -user $USER $dpw  2>/dev/null | wc -l`
files_other_ro=`find  $wdf ! -user $USER $fpw  2>/dev/null | wc -l`

let other_not_rsa=$dirs_other_not_rsa+$files_other_not_rsa
let other_bad_perm=$dirs_other_bad_perm+$files_other_bad_perm
let other_ro=$dirs_other_ro+$files_other_ro

let other_problems=$other_not_rsa+$other_bad_perm+$other_ro

# Function to add owners of files or directories found by the specified
# 'find' command to the list of bad owners.
# Argument: 'find' command to execute
bad_owner_list=""
bad_owner_test=""
function addOwners {
    local find_cmd=$1
    local first_file="x"
    while [ -n "$first_file" ]; do
        first_file=`$find_cmd $bad_owner_test 2>/dev/null | head -1`
        if [ -n "$first_file" ]; then
            local owner=`ls -l -d $first_file | awk '{print $3; }'`
            if [ -z "$bad_owner_list" ]; then
                bad_owner_list="$owner"
            else
                bad_owner_list="$bad_owner_list, $owner"
            fi
            bad_owner_test="$bad_owner_test ! -user $owner"
        fi
    done
}

if [ $other_problems -gt 0 ]; then
    echo "Files and directories owned by other users have the following problems:"
    if [ $other_not_rsa -gt 0 ]; then
        echo "    $dirs_other_not_rsa directories and $files_other_not_rsa files are not owned by group 'rootarch'."
    fi
    if [ $other_bad_perm -gt 0 ]; then
        echo "    $dirs_other_bad_perm directories and $files_other_bad_perm files have incorrect permissions."
    fi
    if [ $other_ro -gt 0 ]; then
        echo "    $dirs_other_ro directories and $files_other_ro files are not writable by you."
    fi
    addOwners "find   $wdd ! -user $USER ! -group rootarch"
    addOwners "find   $wdf ! -user $USER ! -group rootarch"
    addOwners "find   $wdd ! -user $USER $dpr"
    addOwners "find   $wdf ! -user $USER $fpr"
    addOwners "find   $wdd ! -user $USER $dpw"
    addOwners "find   $wdf ! -user $USER $fpw"
    echo "This problems are caused by files and directories owned by: $bad_owner_list."
    echo "Please ask these users to run 'rsa-setrights-proc' script."
else
    echo "Files and directories owned by other users are OK."
fi
echo 
