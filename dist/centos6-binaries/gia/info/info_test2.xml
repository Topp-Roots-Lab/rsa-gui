<gia_meta_data>
    <!--gia_transform id="transform_autocropping">
     <screen_name>Cropping of images from Duke labs</screen_name>
     <input>cvimagewrapper</input>
     <description><![CDATA[
     <p>Description goes here</p>
     ]]></description>
     <parameter id="crop_bottom"
     screen_name="Crop bottom side?" default_value="false" value_type="bool" category="basic" />
     <parameter id="crop_top"
     screen_name="Crop top side?" default_value="true" value_type="bool" category="basic" />
     <parameter id="crop_left"
     screen_name="Crop left side?" default_value="true" value_type="bool" category="basic" />
     <parameter id="crop_right"
     screen_name="Crop right side?" default_value="true" value_type="bool" category="basic" />
     <parameter id="tolerance_vertical_1st_pass"
     screen_name="Vertical tolerance for 1st pass" default_value="7" value_type="int" category="advanced">
     <value>0</value>
     <value>25</value>
     </parameter>
     <parameter id="tolerance_horizontal_pass"
     screen_name="Horizontal tolerance" default_value="7" value_type="int" category="advanced">
     <value>0</value>
     <value>25</value>
     </parameter>
     <parameter id="tolerance_vertical_2nd_pass"
     screen_name="Vertical tolerance for 2nd pass" default_value="5" value_type="int" category="advanced">
     <value>0</value>
     <value>25</value>
     </parameter>
     </gia_transform-->
    
    <gia_transform id="transform_rotation">
        <screen_name>Rotation</screen_name>
        <input>cvimagewrapper</input>
        <parameter id="rotate" screen_name="Rotate by" default_value="0" value_type="range" category="basic">
            <value>0</value>
            <value>90</value>
            <value>180</value>
            <value>270</value>
        </parameter>
        <parameter id="flip" screen_name="Flip" default_value="none" value_type="range" category="basic">
            <value>none</value>
            <value>horizontal</value>
            <value>vertical</value>
            <value>both</value>
        </parameter>
    </gia_transform>
    
    <gia_transform id="transform_manual_cropping">
        <screen_name>Manual Cropping</screen_name>
        <input>cvimagewrapper</input>
        <parameter id="cropping_top" screen_name="Top" default_value="0" value_type="int" category="basic" tie="%height%" />
        <parameter id="cropping_left" screen_name="Left" default_value="0" value_type="int" category="basic" tie="%width%" />
        <parameter id="cropping_height" screen_name="Height" default_value="0" value_type="int" category="basic" tie="%height%" />
        <parameter id="cropping_width" screen_name="Width" default_value="0" value_type="int" category="basic" tie="%width%" />
    </gia_transform>
    
    <gia_algorithm id="experimental_cleaning_agg">
        <screen_name>Experimental Aggregate Cleaning</screen_name>
        <parameter id="dark_root"
            screen_name="Root darker than background" default_value="true" value_type="bool" category="basic" />
        <parameter id="add_scalar"   
            screen_name="Add scalar value to pixels" default_value="0" value_type="int" category="basic">
            <value>-255</value>
            <value>255</value>
        </parameter>
    </gia_algorithm>
    
    <gia_algorithm id="thresholding_adaptive">
        <screen_name>Adaptive Image Thresholding</screen_name>
        <url>info/thresholding_adaptive.html</url>
        <parameter id="block_size"
            screen_name="Block size" default_value="19" value_type="int" category="basic">
            <value>3</value>
            <value>200</value>
        </parameter>
        <parameter id="subtract_constant"   
            screen_name="Mean shift" default_value="-1.25" value_type="float" category="basic">
            <value>-2.5</value>
            <value>0.0</value>
        </parameter>
        <!--parameter id="max_value"
         screen_name="Value for network pixels" default_value="255" value_type="int" category="advanced">
         <value>0</value>
         <value>255</value>
         </parameter-->
        <parameter id="max_component_size_to_ignore"
            screen_name="Ignore con comp of size less" default_value="4000" value_type="int" category="basic">
            <value>0</value>
            <value>5000</value>
        </parameter>
        <parameter id="adaptive_method"
            screen_name="Adaptive thresholding method" default_value="CV_ADAPTIVE_THRESH_MEAN_C" value_type="range" category="advanced">
            <value>CV_ADAPTIVE_THRESH_MEAN_C</value>
            <value>CV_ADAPTIVE_THRESH_GAUSSIAN_C</value>
        </parameter>
        <parameter id="threshold_type"
            screen_name="Thresholding type" default_value="CV_THRESH_BINARY" value_type="range" category="advanced">
            <value>CV_THRESH_BINARY</value>
            <value>CV_THRESH_BINARY_INV</value>
            <value>CV_THRESH_TRUNC</value>
            <value>CV_THRESH_TOZERO</value>
            <value>CV_THRESH_TOZERO_INV</value>
        </parameter>
    </gia_algorithm>
    
    <gia_algorithm id="thresholding_double_adaptive">
        <screen_name>Double Adaptive Image Thresholding</screen_name>
        <description><![CDATA[
        	<p>Double adaptive thresholding is a modification of the (single) adaptive
        	thresholding technique that takes into account possible multi-scale
        	structure of foreground objects. Rather than computing the mean
        	intensity over a fixed-size neighborhood of a pixel, this methods look
        	as the behavior of the mean intensity as a function of the neighborhood
        	size and classifies the pixel as foreground if a sufficiently large
        	decrease/increase in its values is achieved within a specified range of
        	neighborhood sizes.</p>
        ]]></description>
        <parameter id="block_size"
            screen_name="Neighborhood size" default_value="15" value_type="int" category="basic">
            <value>0</value>
            <value>255</value>
        </parameter>
        <parameter id="drop_value"
            screen_name="Bound drop value" default_value="5" value_type="int" category="advanced">
            <value>0</value>
            <value>255</value>
        </parameter>
        <parameter id="max_component_size_to_ignore"
            screen_name="Ignore con comp of size less" default_value="4000" value_type="int" category="basic">
            <value>0</value>
            <value>5000</value>
        </parameter>
    </gia_algorithm>
    
    <gia_algorithm id="thresholding_global">
        <screen_name>Global Image Thresholding</screen_name>
        <url>info/thresholding_global.html</url>
        <parameter id="threshold"
            screen_name="Threshold value" default_value="150" value_type="int" category="basic">
            <value>1</value>
            <value>255</value>
        </parameter>
        <parameter id="max_component_size_to_ignore"
            screen_name="Ignore con comp of size less" default_value="4000" value_type="int" category="basic">
            <value>0</value>
            <value>5000</value>
        </parameter>
        <!--parameter id="max_value"
         screen_name="Value for network pixels" default_value="255" value_type="int" category="advanced">
         <value>0</value>
         <value>255</value>
         </parameter-->
        <parameter id="threshold_type"
            screen_name="Thresholding type" default_value="CV_THRESH_BINARY" value_type="range" category="advanced">
            <value>CV_THRESH_BINARY</value>
            <value>CV_THRESH_BINARY_INV</value>
            <value>CV_THRESH_TRUNC</value>
            <value>CV_THRESH_TOZERO</value>
            <value>CV_THRESH_TOZERO_INV</value>
        </parameter>
    </gia_algorithm>
    
    
    <gia_algorithm id="preparation_color_2_gray">
        <screen_name>Convert RGB to Gray</screen_name>
        <description><![CDATA[
            <p></p>
        ]]></description>
        <parameter id="reverse"
        screen_name="Dark root on bright background" default_value="true" value_type="bool" category="basic" />
        <parameter id="simple"
        screen_name="Simple conversion from RGB" default_value="true" value_type="bool" category="basic" />
    </gia_algorithm>

    <gia_algorithm id="cleaning_skip">
        <screen_name>Skip Cleaning</screen_name>
        <description><![CDATA[
            <p><b>Skip Cleaning</b>. No correction step will be applied (like background subtraction or noise removal)</p>
        ]]></description>
    </gia_algorithm>

    <gia_algorithm id="cropping_skip">
        <screen_name>Skip Cropping</screen_name>
        <description><![CDATA[
            <p><b>Skip Cropping</b>. GiA Roots will not apply any cropping to the images prior to feature estimation.</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_algorithm id="cropping_manual">
        <screen_name>Manual Cropping</screen_name>
        <description><![CDATA[
            <p><b>Manual Cropping</b>. The image is cropped using a rectangular frame selected by the user in the Data component of GiA Roots.</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_data_type id="grayimage">
        <screen_name>Gray Image</screen_name>
        <category>tech2d</category>
        <description><![CDATA[
            <p><b>Gray image</b> - an image in which the color value of each pixel is a number between 0-255 denoting the intensity (0 is black, 255 is white).</p>
        ]]></description>
    </gia_data_type>
    
    <gia_data_type id="ThresholdedImage">
        <screen_name>Thresholded Image</screen_name>
        <category>tech2d</category>
        <description><![CDATA[
            <p><b>Thresholded Image</b> is a result of complex procedure in which "object" pixels (in this case, pixels that are part of the root system) are separated from "background" pixels.  The result of which is an image in which the foreground (usually white) is separated from the background (usually black).  This software includes several algorithms for thresholding.</p>
        ]]></description>
    </gia_data_type>
    
    <gia_data_type id="croppedimage">
        <screen_name>Cropped Image</screen_name>
        <category>tech2d</category>
        <description><![CDATA[
            <p><b>Cropped Image</b> is a result cropping of original image.</p>
        ]]></description>
    </gia_data_type>

    <gia_data_type id="cleanedimage">
        <screen_name>Cleaned Image</screen_name>
        <category>tech2d</category>
        <description><![CDATA[
            <p><b>Cleaned Image</b> is a result of cleaning of cropped image. Such operations as background subtraction or noise removal are performed here.</p>
        ]]></description>
    </gia_data_type>

    <gia_data_type id="croppingrect">
        <screen_name></screen_name>
        <category>tech2d</category>
        <description><![CDATA[
            <p><b>Cropped Image</b> is a result cropping of original image.</p>
        ]]></description>
    </gia_data_type>
    
    
    <gia_algorithm id="thinning_binary">
        <screen_name>Binary Network Thinning</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_algorithm id="thinning_grayscale">
        <screen_name>Experimental Grayscale Network Thinning</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_data_type id="thinnedimage">
        <screen_name>Thinned Image</screen_name>
        <category>tech2d</category>
        <url>info/thinnedimage.html</url>
    </gia_data_type>
    
    
    <gia_algorithm id="feature_ellipse_axes">
        <screen_name>Enclosing Network into Ellipse</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_data_type id="minorellipseaxesfeature">
        <screen_name>Minor Ellipse Axis</screen_name>
        <category>basic2d</category>
        <url>info/minor_ellipse_axis.html</url>
    </gia_data_type>
    
    <gia_data_type id="majorellipseaxesfeature">
        <screen_name>Major Ellipse Axis</screen_name>
        <category>basic2d</category>
        <url>info/major_ellipse_axis.html</url>
    </gia_data_type>
    
    <gia_data_type id="ellipseaxesaspectratiofeature">
        <screen_name>Ellipse Axes Ratio</screen_name>
        <category>basic2d</category>
        <url>info/ratio_ellipse.html</url>
    </gia_data_type>
    
    
    <gia_algorithm id="feature_network_areas">
        <screen_name>Calculate Network Areas</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_data_type id="networkconvexareafeature">
        <screen_name>Network Convex Area</screen_name>
        <category>basic2d</category>
        <url>info/convex_area.html</url>
    </gia_data_type>
    
    <gia_data_type id="networkareafeature">
        <screen_name>Network Area</screen_name>
        <category>basic2d</category>
        <url>info/network_area.html</url>
    </gia_data_type>
    
    <gia_data_type id="solidityfeature">
        <screen_name>Network Solidity</screen_name>
        <category>basic2d</category>
        <url>info/solidity.html</url>    
    </gia_data_type>
    
    
    <gia_algorithm id="feature_roots_number">
        <screen_name>Enumerate Distinct Roots</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_data_type id="mediannumberofrootsfeature">
        <screen_name>Median Number of Roots</screen_name>
        <category>basic2d</category>
        <url>info/median_number_roots.html</url>  
    </gia_data_type>
    
    <gia_data_type id="maximumnumberofrootsfeature">
        <screen_name>Maximum Number of Roots</screen_name>
        <category>basic2d</category>
        <url>info/maximum_number_roots.html</url>  
    </gia_data_type>
    
    <gia_data_type id="bushinessfeature">
        <screen_name>Network Bushiness</screen_name>
        <category>basic2d</category>
        <url>info/bushiness.html</url>
    </gia_data_type>
    <gia_data_type id="ccomponentscountfeature">
        <screen_name>Number of Connected Components</screen_name>
        <category>basic2d</category>
        <description><![CDATA[
            <p><b>Number of connected components (Ncon)</b> - an integer denoting the number of connected groups of network pixels in the image after image pre-processing.  For example, if all network pixels in the thresholded imaged are connected to all others via a contiguous path of nearest neighbor network pixels, then the NCC value is 1.  If the root network has a break in it somewhere that separates the network into two subnetworks, then the NCC value is 2.  Note that a real root should only have 1 connected component, but due to errors in image acquisition and pre-processing, NCC may be greater than 1 and can be used as a quality control value.</p>
        ]]></description>  
    </gia_data_type>
    <gia_algorithm id="feature_perimeter">
        <screen_name>Estimate Network Perimeter</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_algorithm id="feature_components">
        <screen_name>Number of Connected Components</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    
    <gia_data_type id="perimeterfeature">
        <screen_name>Network Perimeter</screen_name>
        <category>basic2d</category>
        <url>info/perimeter.html</url>
    </gia_data_type>
    
    
    <gia_algorithm id="features_skeleton_v2">
        <screen_name>Estimate Root Width and Linear Dimensions</screen_name>
        <description><![CDATA[
            <p>???</p>
        ]]></description>
    </gia_algorithm>
    
    <gia_data_type id="averagerootwidthx2feature">
        <screen_name>Average Root Width (Diameter)</screen_name>
        <category>basic2d</category>
        <url>info/mean_root_width.html</url>    
    </gia_data_type>
    
    <gia_data_type id="specificrootlengthfeature">
        <screen_name>Specific Root Length</screen_name>
        <category>basic2d</category>
        <url>info/specific_root_length.html</url>
    </gia_data_type>
    
    <gia_transform id="transform_setscale">
        <screen_name>Set Scale</screen_name>
        <input>cvimagewrapper</input>
        <parameter id="metric_scale" screen_name="Pixels per cm" default_value="1" value_type="int" category="basic" tie="%height%" />
    </gia_transform>
    
    <gia_data_type id="totallengthfeature">
        <screen_name>Network Length</screen_name>
        <category>basic2d</category>
        <url>info/total_root_length.html</url>
    </gia_data_type>
    
    <gia_data_type id="surfaceareafeature">
        <screen_name>Network Surface Area</screen_name>
        <category>basic2d</category>
        <url>info/surface_area.html</url>
    </gia_data_type>
    
    <gia_data_type id="maxwidthfeature">
        <screen_name>Network Width</screen_name>
        <category>basic2d</category>
        <url>info/max_width.html</url>
    </gia_data_type>
    
    <gia_data_type id="depthfeature">
        <screen_name>Network Depth</screen_name>
        <category>basic2d</category>
        <url>info/depth.html</url>
    </gia_data_type>
    
    <gia_data_type id="widthdepthratiofeature">
        <screen_name>Network Width to Depth Ratio</screen_name>
        <category>basic2d</category>
        <url>info/width_to_depth_ratio.html</url>
    </gia_data_type>
    
    <gia_data_type id="lengthdistrfeature">
        <screen_name>Network Length Distribution</screen_name>
        <category>basic2d</category>
        <url>info/length_distribution.html</url>
    </gia_data_type>
    
    <gia_data_type id="volumefeature">
        <screen_name>Network Volume</screen_name>
        <category>basic2d</category>
        <url>info/volume.html</url>
    </gia_data_type>
    
    <gia_algorithm id="Rolling Paraboloid">
        <screen_name>Rolling Paraboloid Cleaning</screen_name>
        <url>info/rolling_paraboloid.html</url>
        <parameter id="radius"
            screen_name="Paraboloid Radius" default_value="5.0" value_type="float" category="basic">
            <value>1</value>
            <value>500</value>
        </parameter>
        <parameter id="is_light_background"
         screen_name="is_light_background" default_value="true" value_type="bool" category="basic" />
        <parameter id="do_presmooth"
         screen_name="do_presmooth" default_value="true" value_type="bool" category="basic" />
        <parameter id="do_correct_corners"
         screen_name="do_correct_corners" default_value="true" value_type="bool" category="basic" />
        <parameter id="invert"
         screen_name="invert" default_value="true" value_type="bool" category="basic" />
    </gia_algorithm>    
    
</gia_meta_data>
