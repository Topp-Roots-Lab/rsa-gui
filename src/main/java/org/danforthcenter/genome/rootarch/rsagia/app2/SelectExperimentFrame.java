package org.danforthcenter.genome.rootarch.rsagia.app2;

import org.danforthcenter.genome.rootarch.rsagia.dbfunctions.MetadataDBFunctions;
import org.danforthcenter.genome.rootarch.rsagia2.DirRename;
import org.jooq.Record;
import org.jooq.Result;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;

public class SelectExperimentFrame extends JDialog implements ActionListener, PropertyChangeListener {
    private JComboBox expComboBox;
    private JButton editButton;
    private JPanel panel1;
    private JButton viewButton;
    private JComboBox orgComboBox;
    private MetadataDBFunctions mdf;
    private DirRename dirRenameApp;
    private File baseDir;
    private String selectedExperiment;
    private String selectedOrganism;

    public SelectExperimentFrame(DirRename dirRenameApp, File baseDir) {
        super(null, "Select Experiment", ModalityType.APPLICATION_MODAL);
        $$$setupUI$$$();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.getContentPane().add(this.panel1);
        this.dirRenameApp = dirRenameApp;
        this.baseDir = baseDir;
        this.editButton.addActionListener(this);
        this.viewButton.addActionListener(this);
        this.mdf = new MetadataDBFunctions();

        loadExperiments();

        expComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    selectedExperiment = (String) e.getItem();
                    loadOrganisms();
                }
            }
        });

        orgComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    selectedOrganism = (String) e.getItem();
                }
            }
        });
    }

    private void loadExperiments() {
        DefaultComboBoxModel experiments = new DefaultComboBoxModel();
        Result<Record> expRecord = this.mdf.selectAllExperiments();
        for (Record r : expRecord) {
            experiments.addElement((String) r.getValue("experiment_code"));
        }
        selectedExperiment = (String) experiments.getElementAt(0);
        expComboBox.setModel(experiments);
        loadOrganisms();
    }

    private void loadOrganisms() {
        DefaultComboBoxModel organisms = new DefaultComboBoxModel();
        Result<Record> organismRecord = this.mdf.findOrganismByExperiment(selectedExperiment);
        for (Record r : organismRecord) {
            organisms.addElement((String) r.getValue("organism_name"));
        }
        selectedOrganism = (String) organisms.getElementAt(0);
        orgComboBox.setModel(organisms);
        pack();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == editButton) {
            if (selectedOrganism != null && selectedExperiment != null) {
                EditExperimentFrame editExp = new EditExperimentFrame(selectedExperiment, selectedOrganism, dirRenameApp, baseDir);
                editExp.addPropertyChangeListener("getall", this);
                editExp.setLocationRelativeTo(null);
                editExp.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Please add experiment first!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else if (e.getSource() == viewButton) {
            if (selectedOrganism != null && selectedExperiment != null) {
                ViewExperimentFrame viewExperiment = new ViewExperimentFrame(selectedExperiment, selectedOrganism);
                viewExperiment.setLocationRelativeTo(null);
                viewExperiment.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Please add experiment first!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("getall")) {
            firePropertyChange("getall", null, null);
            loadExperiments();
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setPreferredSize(new Dimension(300, 170));
        final JLabel label1 = new JLabel();
        label1.setText("Select Experiment:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        expComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(expComboBox, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer3, gbc);
        editButton = new JButton();
        editButton.setText("Edit");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(editButton, gbc);
        viewButton = new JButton();
        viewButton.setText("View");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 50, 0, 0);
        panel1.add(viewButton, gbc);
        orgComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        orgComboBox.setModel(defaultComboBoxModel1);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(orgComboBox, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Select Organism:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label2, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
