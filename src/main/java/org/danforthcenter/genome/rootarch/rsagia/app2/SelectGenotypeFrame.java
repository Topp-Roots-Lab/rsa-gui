package org.danforthcenter.genome.rootarch.rsagia.app2;

import org.danforthcenter.genome.rootarch.rsagia.dbfunctions.MetadataDBFunctions;
import org.danforthcenter.genome.rootarch.rsagia2.DirRename;
import org.jooq.Record;
import org.jooq.Result;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.util.ArrayList;

@SuppressWarnings("unchecked")
public class SelectGenotypeFrame extends JDialog implements ActionListener, PropertyChangeListener {
    private JPanel panel1;
    private JComboBox<String> organismComboBox;
    private JComboBox<String> genotypeComboBox;
    private JButton editButton;
    private MetadataDBFunctions mdf;
    private String selectedOrganism;
    private String selectedGenotype;

    public SelectGenotypeFrame() {
        super(null, "Select Genotype", ModalityType.APPLICATION_MODAL);
        $$$setupUI$$$();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.getContentPane().add(this.panel1);
        this.editButton.addActionListener(this);
        this.mdf = new MetadataDBFunctions();

        loadOrganisms();

        organismComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    selectedOrganism = (String) e.getItem();
                    loadGenotypes();
                }
            }
        });

        genotypeComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    selectedGenotype = (String) e.getItem();
                }
            }
        });
    }

    private void loadOrganisms() {
        ArrayList<String> orgList = this.mdf.findOrganismsWithGenotypes();
        DefaultComboBoxModel<String> organisms = new DefaultComboBoxModel<>(orgList.toArray(new String[0]));
        selectedOrganism = (String) organisms.getElementAt(0);
        organismComboBox.setModel(organisms);
        loadGenotypes();
    }

    private void loadGenotypes() {
        DefaultComboBoxModel<String> genotypes = new DefaultComboBoxModel<>();
        Result<Record> genotypeRecord = this.mdf.findGenotypesFromOrganism(selectedOrganism);
        for (Record r : genotypeRecord) {
            Object genotypeName = r.getValue("genotype_name");
            genotypes.addElement((String) genotypeName);
        }
        selectedGenotype = (String) genotypes.getElementAt(0);
        genotypeComboBox.setModel(genotypes);
        pack();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == this.editButton) {
            if (selectedOrganism != null && selectedGenotype != null) {
                EditGenotypeFrame egf = new EditGenotypeFrame(selectedOrganism, selectedGenotype);
                egf.addPropertyChangeListener(this);
                egf.setLocationRelativeTo(null);
                egf.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Please add genotype first!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("getall")) {
            loadGenotypes();
        }
    }

    private void createUIComponents() {
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("Select Genotype:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(10, 10, 10, 10);
        panel1.add(label1, gbc);
        genotypeComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 10, 10);
        panel1.add(genotypeComboBox, gbc);
        editButton = new JButton();
        editButton.setText("Edit");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 10, 10);
        panel1.add(editButton, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Select Organism:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(10, 10, 10, 10);
        panel1.add(label2, gbc);
        organismComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 0, 10, 10);
        panel1.add(organismComboBox, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
