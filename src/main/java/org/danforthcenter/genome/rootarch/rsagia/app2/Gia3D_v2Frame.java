/*
 *  Copyright 2013 vp23.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

package org.danforthcenter.genome.rootarch.rsagia.app2;

///**
// *
// * @author vp23
// */
//public class Gia3D_v2Frame {
//
//}

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.Collections;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author vp23
 */
public class Gia3D_v2Frame extends javax.swing.JFrame implements
		java.awt.event.ActionListener {
	ArrayList<String> descrHoldList;
	ArrayList<String> configList;

	// tw 2014july14 moved from bottom of class to top
	// Variables declaration - do not modify
	private javax.swing.JButton addButton;
	private javax.swing.JButton cancelButton;
	private javax.swing.JComboBox<String> configComboBox;
	private javax.swing.JList<String> descriptorList;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton nextButton;
	private javax.swing.JButton removeButton;
	// End of variables declaration

	public final static String DEFAULT_CONFIG_SKEL3D = "scale_2.25";

	public Gia3D_v2Frame(ArrayList<String> descrList,
			ArrayList<String> configList) {
		initComponents();

		this.configList = configList;
		descrHoldList = new ArrayList<String>();

		descriptorList.removeAll();
		configComboBox.removeAllItems();

		descriptorList.setModel(new DefaultListModel<>());
		DefaultListModel<String> dlm = (DefaultListModel<String>) descriptorList.getModel();
		for (String str : descrList) {
			dlm.addElement(str);
		}

		Collections.sort(configList);
		int def = 0;
		int i = 0;
		for (String str : configList) {
			if (str.equalsIgnoreCase(DEFAULT_CONFIG_SKEL3D))
				def = i;
			configComboBox.addItem(str);
			i++;
		}
		// default for 2.25
		configComboBox.setSelectedIndex(def);
		// default for the first item
		descriptorList.setSelectedIndex(0);

		addButton.addActionListener(this);
		addButton.setEnabled(false);
		removeButton.addActionListener(this);
		nextButton.addActionListener(this);
		cancelButton.addActionListener(this);
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == addButton) {
			Object[] arr = descrHoldList.toArray();
			Object obj = JOptionPane.showInputDialog(this,
					"Choose a descriptor to add:", "Add Descriptor",
					JOptionPane.PLAIN_MESSAGE, null, arr, arr);
			if (obj != null) {
				descrHoldList.remove(obj);
				DefaultListModel<String> dlm = (DefaultListModel<String>) descriptorList
						.getModel();
				dlm.addElement((String) obj);

				if (descrHoldList.size() == 0) {
					addButton.setEnabled(false);
				}

				if (!removeButton.isEnabled()) {
					removeButton.setEnabled(true);
				}
			}
		} else if (e.getSource() == removeButton) {
			int[] inds = descriptorList.getSelectedIndices();
			DefaultListModel<String> dlm = (DefaultListModel<String>) descriptorList.getModel();
			Object[] values = new Object[inds.length];
			for (int j = 0; j < values.length; j++) {
				values[j] = dlm.getElementAt(inds[j]);
			}

			for (Object obj : values) {
				dlm.removeElement(obj);
				descrHoldList.add((String) obj);
			}

			if (dlm.getSize() > 0) {
				descriptorList.setSelectedIndex(0);
			} else {
				removeButton.setEnabled(false);
			}

			if (!addButton.isEnabled()) {
				addButton.setEnabled(true);
			}
		} else if (e.getSource() == nextButton) {
			firePropertyChange("done", false, true);
		} else if (e.getSource() == cancelButton) {
			// TODO: clean up first if needed
			cancel();

			// close this window
			closeWindow();
		}
	}

	public String getConfig() {
		return (String) configComboBox.getSelectedItem();
	}

	public String getDescriptors() {
		String ans = "";
		DefaultListModel<String> dlm = (DefaultListModel<String>) descriptorList.getModel();
		int s = dlm.getSize();
		for (int i = 0; i < s; i++) {
			ans += ((String) dlm.get(i)) + ((i == s - 1) ? "" : ";");
		}

		return ans;
	}

	private void cancel() {
		// TODO: clean up
	}

	private void closeWindow() {
		dispose();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		descriptorList = new javax.swing.JList();
		addButton = new javax.swing.JButton();
		removeButton = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		configComboBox = new javax.swing.JComboBox();
		nextButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setTitle("Gia3D_v2 Configuration");

		jLabel1.setText("Choose Descriptors:");

		descriptorList.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4",
					"Item 5" };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		jScrollPane1.setViewportView(descriptorList);

		addButton.setText("Add");

		removeButton.setText("Remove");

		jLabel2.setText("Choose Configuration:");

		configComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		nextButton.setText("Next");

		cancelButton.setText("Cancel");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														234, Short.MAX_VALUE)
												.addComponent(jLabel1)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		addButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		96,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		34,
																		Short.MAX_VALUE)
																.addComponent(
																		removeButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		104,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(28, 28,
																		28)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						configComboBox,
																						0,
																						180,
																						Short.MAX_VALUE)
																				.addComponent(
																						jLabel2,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(30, 30,
																		30)
																.addComponent(
																		nextButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		85,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		cancelButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		85,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(jLabel2))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												false)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane1,
																		0,
																		0,
																		Short.MAX_VALUE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						addButton)
																				.addComponent(
																						removeButton)
																				.addComponent(
																						nextButton)
																				.addComponent(
																						cancelButton)))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		configComboBox)
																.addGap(211,
																		211,
																		211)))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				ArrayList<String> descrList = new ArrayList<String>();
				ArrayList<String> configList = new ArrayList<String>();

				descrList.add("wizzlevalue");
				descrList.add("fizzlevalue");
				descrList.add("beervalue");
				descrList.add("winevalue");
				descrList.add("wozzvalue");

				configList.add("rice1");
				configList.add("rice2");
				configList.add("corn1");
				configList.add("rice3");

			}
		});
	}

	// Variables declaration - do not modify
	/*
	 * private javax.swing.JButton addButton; private javax.swing.JButton
	 * cancelButton; private javax.swing.JComboBox configComboBox; private
	 * javax.swing.JList descriptorList; private javax.swing.JLabel jLabel1;
	 * private javax.swing.JLabel jLabel2; private javax.swing.JScrollPane
	 * jScrollPane1; private javax.swing.JButton nextButton; private
	 * javax.swing.JButton removeButton;
	 */
	// End of variables declaration

}
