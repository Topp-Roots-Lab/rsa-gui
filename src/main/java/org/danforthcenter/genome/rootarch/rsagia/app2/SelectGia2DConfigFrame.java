package org.danforthcenter.genome.rootarch.rsagia.app2;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;

import org.danforthcenter.genome.rootarch.rsagia.dbfunctions.OutputInfoDBFunctions;

public class SelectGia2DConfigFrame extends JFrame implements ActionListener, PropertyChangeListener {
    private JLabel label;
    private JComboBox configComboBox;
    private JButton viewButton;
    private JButton editButton;
    private JPanel panel1;
    private OutputInfoDBFunctions oidf;
    private String selectedConfig;

    public SelectGia2DConfigFrame() {
        $$$setupUI$$$();
        this.setTitle("Select Gia2D Config");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.viewButton.addActionListener(this);
        this.editButton.addActionListener(this);
        this.getContentPane().add(this.panel1);
        this.oidf = new OutputInfoDBFunctions();

        loadConfigs();

        configComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    selectedConfig = (String) e.getItem();
                }
            }
        });
    }

    private void loadConfigs() {
        ArrayList<String> savedConfigs = this.oidf.getSavedConfigs("giaroot_2d");
        DefaultComboBoxModel configs = new DefaultComboBoxModel(savedConfigs.toArray());
        selectedConfig = (String) configs.getElementAt(0);
        this.configComboBox.setModel(configs);
        pack();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == this.viewButton) {
            if (selectedConfig != null) {
                ViewGia2DConfigFrame viewConfig = new ViewGia2DConfigFrame(selectedConfig);
                viewConfig.setLocationRelativeTo(null);
                viewConfig.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Please add config first!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else if (e.getSource() == this.editButton) {
            if (selectedConfig != null) {
                EditGia2DConfigFrame editConfig = new EditGia2DConfigFrame(selectedConfig);
                editConfig.addPropertyChangeListener("getall", this);
                editConfig.setLocationRelativeTo(null);
                editConfig.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Please add config first!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("getall")) {
            loadConfigs();
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        label = new JLabel();
        label.setText("Select configuration:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(10, 10, 10, 10);
        panel1.add(label, gbc);
        configComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 0, 10);
        panel1.add(configComboBox, gbc);
        viewButton = new JButton();
        viewButton.setText("View");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.insets = new Insets(10, 0, 10, 0);
        panel1.add(viewButton, gbc);
        editButton = new JButton();
        editButton.setText("Edit");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.insets = new Insets(0, 0, 0, 10);
        panel1.add(editButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
