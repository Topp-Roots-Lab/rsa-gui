package org.danforthcenter.genome.rootarch.rsagia.app2;

import org.danforthcenter.genome.rootarch.rsagia.db.enums.UserAccessLevel;
import org.danforthcenter.genome.rootarch.rsagia.dbfunctions.MetadataDBFunctions;
import org.danforthcenter.genome.rootarch.rsagia2.DirRename;
import org.danforthcenter.genome.rootarch.rsagia2.UserAccess;
import org.jooq.Record;
import org.jooq.Result;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;

public class SelectOrganismFrame extends JDialog implements
        ActionListener, PropertyChangeListener {
    private JComboBox comboBox1;
    private JButton editButton;
    private JPanel panel1;
    private JButton viewButton;
    private MetadataDBFunctions mdf;
    private DirRename dirRenameApp;
    private File baseDir;
    private String selectedOrganism;

    public SelectOrganismFrame(DirRename dirRenameApp, File baseDir) {
        super(null, "Select Organism", ModalityType.APPLICATION_MODAL);

        $$$setupUI$$$();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.getContentPane().add(this.panel1);
        this.dirRenameApp = dirRenameApp;
        this.baseDir = baseDir;
        editButton.addActionListener(this);
        viewButton.addActionListener(this);
        this.mdf = new MetadataDBFunctions();
        loadOrganisms();

        comboBox1.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    selectedOrganism = (String) e.getItem();
                }
            }
        });
    }

    private void loadOrganisms() {
        DefaultComboBoxModel organisms = new DefaultComboBoxModel();
        Result<Record> organismRecord = this.mdf.selectAllOrganism();
        for (Record r : organismRecord) {
            organisms.addElement((String) r.getValue("organism_name"));
        }
        selectedOrganism = (String) organisms.getElementAt(0);
        comboBox1.setModel(organisms);
        pack();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == this.editButton) {
            if (selectedOrganism != null) {
                if (UserAccess.getCurrentAccessLevel() == UserAccessLevel.Admin) {
                    EditOrganismFrame editOrganism = new EditOrganismFrame(selectedOrganism, this.dirRenameApp, this.baseDir);
                    editOrganism.addPropertyChangeListener("getall", this);
                    editOrganism.setLocationRelativeTo(null);
                    editOrganism.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, "You don't have the permission to edit organism.", null, JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please add organism first!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else if (e.getSource() == this.viewButton) {
            if (selectedOrganism != null) {
                ViewOrganismFrame viewOrganism = new ViewOrganismFrame(selectedOrganism);
                viewOrganism.setLocationRelativeTo(null);
                viewOrganism.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Please add organism first!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("getall")) {
            loadOrganisms();
            firePropertyChange("getall", null, null);
        }
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setPreferredSize(new Dimension(300, 100));
        final JLabel label1 = new JLabel();
        label1.setText("Select Organism:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        comboBox1 = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(comboBox1, gbc);
        editButton = new JButton();
        editButton.setText("Edit");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(editButton, gbc);
        viewButton = new JButton();
        viewButton.setText("View");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 50, 0, 0);
        panel1.add(viewButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
