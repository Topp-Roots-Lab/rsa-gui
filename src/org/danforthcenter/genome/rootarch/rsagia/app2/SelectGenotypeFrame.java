package org.danforthcenter.genome.rootarch.rsagia.app2;

import org.danforthcenter.genome.rootarch.rsagia.dbfunctions.MetadataDBFunctions;
import org.danforthcenter.genome.rootarch.rsagia2.DirRename;
import org.jooq.Record;
import org.jooq.Result;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.util.ArrayList;

public class SelectGenotypeFrame extends JDialog implements ActionListener, PropertyChangeListener {
    private JPanel panel1;
    private JComboBox organismComboBox;
    private JComboBox genotypeComboBox;
    private JButton editButton;
    private MetadataDBFunctions mdf;
    private String selectedOrganism;

    public SelectGenotypeFrame() {
        super(null, "Select Genotype", ModalityType.APPLICATION_MODAL);
        $$$setupUI$$$();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.getContentPane().add(this.panel1);
        pack();
        this.editButton.addActionListener(this);
        this.mdf = new MetadataDBFunctions();

        loadOrganisms();

        organismComboBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    selectedOrganism = (String) e.getItem();
                    loadGenotypes();
                }
            }
        });
    }

    private void loadOrganisms() {
        ArrayList<String> orgList = this.mdf.findOrganismsWithGenotypes();
        DefaultComboBoxModel organisms = new DefaultComboBoxModel(orgList.toArray());
        this.selectedOrganism = (String) organisms.getElementAt(0);
        organismComboBox.setModel(organisms);
        loadGenotypes();
    }

    private void loadGenotypes() {
        DefaultComboBoxModel genotypes = new DefaultComboBoxModel();
        Result<Record> genotypeRecord = this.mdf.findGenotypesFromOrganism(this.selectedOrganism);
        for (Record r : genotypeRecord) {
            Object genotypeName = r.getValue("genotype_name");
            genotypes.addElement(genotypeName);
        }
        genotypeComboBox.setModel(genotypes);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == this.editButton) {
            String selectedGenotype = (String) genotypeComboBox.getSelectedItem();
            EditGenotypeFrame egf = new EditGenotypeFrame(this.selectedOrganism, selectedGenotype);
            egf.addPropertyChangeListener(this);
            egf.setVisible(true);
        }
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getPropertyName().equals("getall")) {
            loadGenotypes();
        }
    }

    private void createUIComponents() {
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setPreferredSize(new Dimension(250, 200));
        final JLabel label1 = new JLabel();
        label1.setText("Select Genotype:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        genotypeComboBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        genotypeComboBox.setModel(defaultComboBoxModel1);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(genotypeComboBox, gbc);
        editButton = new JButton();
        editButton.setPreferredSize(new Dimension(90, 31));
        editButton.setText("Edit");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(editButton, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer3, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Select Organism:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label2, gbc);
        organismComboBox = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(organismComboBox, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
