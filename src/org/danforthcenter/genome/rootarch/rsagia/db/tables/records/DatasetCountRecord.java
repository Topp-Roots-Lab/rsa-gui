/*
 * This file is generated by jOOQ.
*/
package org.danforthcenter.genome.rootarch.rsagia.db.tables.records;


import javax.annotation.Generated;

import org.danforthcenter.genome.rootarch.rsagia.db.enums.DatasetCountConditionType;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.DatasetCount;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatasetCountRecord extends UpdatableRecordImpl<DatasetCountRecord> implements Record5<Integer, Integer, DatasetCountConditionType, Integer, Integer> {

    private static final long serialVersionUID = 608946424;

    /**
     * Setter for <code>rsa_gia.dataset_count.dataset_id</code>.
     */
    public void setDatasetId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>rsa_gia.dataset_count.dataset_id</code>.
     */
    public Integer getDatasetId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>rsa_gia.dataset_count.program_id</code>.
     */
    public void setProgramId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>rsa_gia.dataset_count.program_id</code>.
     */
    public Integer getProgramId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rsa_gia.dataset_count.condition_type</code>.
     */
    public void setConditionType(DatasetCountConditionType value) {
        set(2, value);
    }

    /**
     * Getter for <code>rsa_gia.dataset_count.condition_type</code>.
     */
    public DatasetCountConditionType getConditionType() {
        return (DatasetCountConditionType) get(2);
    }

    /**
     * Setter for <code>rsa_gia.dataset_count.data_count</code>.
     */
    public void setDataCount(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>rsa_gia.dataset_count.data_count</code>.
     */
    public Integer getDataCount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>rsa_gia.dataset_count.red_flag_count</code>.
     */
    public void setRedFlagCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>rsa_gia.dataset_count.red_flag_count</code>.
     */
    public Integer getRedFlagCount() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Integer, DatasetCountConditionType> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, DatasetCountConditionType, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, DatasetCountConditionType, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DatasetCount.DATASET_COUNT.DATASET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return DatasetCount.DATASET_COUNT.PROGRAM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<DatasetCountConditionType> field3() {
        return DatasetCount.DATASET_COUNT.CONDITION_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return DatasetCount.DATASET_COUNT.DATA_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return DatasetCount.DATASET_COUNT.RED_FLAG_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getDatasetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getProgramId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountConditionType component3() {
        return getConditionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getDataCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getRedFlagCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getDatasetId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getProgramId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountConditionType value3() {
        return getConditionType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getDataCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getRedFlagCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountRecord value1(Integer value) {
        setDatasetId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountRecord value2(Integer value) {
        setProgramId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountRecord value3(DatasetCountConditionType value) {
        setConditionType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountRecord value4(Integer value) {
        setDataCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountRecord value5(Integer value) {
        setRedFlagCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatasetCountRecord values(Integer value1, Integer value2, DatasetCountConditionType value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatasetCountRecord
     */
    public DatasetCountRecord() {
        super(DatasetCount.DATASET_COUNT);
    }

    /**
     * Create a detached, initialised DatasetCountRecord
     */
    public DatasetCountRecord(Integer datasetId, Integer programId, DatasetCountConditionType conditionType, Integer dataCount, Integer redFlagCount) {
        super(DatasetCount.DATASET_COUNT);

        set(0, datasetId);
        set(1, programId);
        set(2, conditionType);
        set(3, dataCount);
        set(4, redFlagCount);
    }
}
