/*
 * This file is generated by jOOQ.
*/
package org.danforthcenter.genome.rootarch.rsagia.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.danforthcenter.genome.rootarch.rsagia.db.Indexes;
import org.danforthcenter.genome.rootarch.rsagia.db.Keys;
import org.danforthcenter.genome.rootarch.rsagia.db.RsaGia;
import org.danforthcenter.genome.rootarch.rsagia.db.enums.SeedExperimentTimepointValue;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.records.SeedRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Seed extends TableImpl<SeedRecord> {

    private static final long serialVersionUID = -121652643;

    /**
     * The reference instance of <code>rsa_gia.seed</code>
     */
    public static final Seed SEED = new Seed();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeedRecord> getRecordType() {
        return SeedRecord.class;
    }

    /**
     * The column <code>rsa_gia.seed.seed_id</code>.
     */
    public final TableField<SeedRecord, Integer> SEED_ID = createField("seed_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rsa_gia.seed.experiment_id</code>.
     */
    public final TableField<SeedRecord, Integer> EXPERIMENT_ID = createField("experiment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rsa_gia.seed.seed_name</code>.
     */
    public final TableField<SeedRecord, String> SEED_NAME = createField("seed_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>rsa_gia.seed.genotype</code>.
     */
    public final TableField<SeedRecord, String> GENOTYPE = createField("genotype", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rsa_gia.seed.dry_shoot</code>.
     */
    public final TableField<SeedRecord, Double> DRY_SHOOT = createField("dry_shoot", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>rsa_gia.seed.dry_root</code>.
     */
    public final TableField<SeedRecord, Double> DRY_ROOT = createField("dry_root", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>rsa_gia.seed.wet_shoot</code>.
     */
    public final TableField<SeedRecord, Double> WET_SHOOT = createField("wet_shoot", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>rsa_gia.seed.wet_root</code>.
     */
    public final TableField<SeedRecord, Double> WET_ROOT = createField("wet_root", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>rsa_gia.seed.sterilization_chamber</code>.
     */
    public final TableField<SeedRecord, Double> STERILIZATION_CHAMBER = createField("sterilization_chamber", org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>rsa_gia.seed.experiment_timepoint_value</code>.
     */
    public final TableField<SeedRecord, SeedExperimentTimepointValue> EXPERIMENT_TIMEPOINT_VALUE = createField("experiment_timepoint_value", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.danforthcenter.genome.rootarch.rsagia.db.enums.SeedExperimentTimepointValue.class), this, "");

    /**
     * The column <code>rsa_gia.seed.description</code>.
     */
    public final TableField<SeedRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>rsa_gia.seed.experiment_start_date</code>.
     */
    public final TableField<SeedRecord, Timestamp> EXPERIMENT_START_DATE = createField("experiment_start_date", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>rsa_gia.seed</code> table reference
     */
    public Seed() {
        this(DSL.name("seed"), null);
    }

    /**
     * Create an aliased <code>rsa_gia.seed</code> table reference
     */
    public Seed(String alias) {
        this(DSL.name(alias), SEED);
    }

    /**
     * Create an aliased <code>rsa_gia.seed</code> table reference
     */
    public Seed(Name alias) {
        this(alias, SEED);
    }

    private Seed(Name alias, Table<SeedRecord> aliased) {
        this(alias, aliased, null);
    }

    private Seed(Name alias, Table<SeedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return RsaGia.RSA_GIA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEED_PRIMARY, Indexes.SEED_SEED_EXPERIMENT_EXPERIMENT_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SeedRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SEED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SeedRecord> getPrimaryKey() {
        return Keys.KEY_SEED_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SeedRecord>> getKeys() {
        return Arrays.<UniqueKey<SeedRecord>>asList(Keys.KEY_SEED_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SeedRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SeedRecord, ?>>asList(Keys.SEED_EXPERIMENT_EXPERIMENT_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Seed as(String alias) {
        return new Seed(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Seed as(Name alias) {
        return new Seed(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Seed rename(String name) {
        return new Seed(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Seed rename(Name name) {
        return new Seed(name, null);
    }
}
