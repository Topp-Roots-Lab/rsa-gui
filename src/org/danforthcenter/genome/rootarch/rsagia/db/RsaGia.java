/*
 * This file is generated by jOOQ.
*/
package org.danforthcenter.genome.rootarch.rsagia.db;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.danforthcenter.genome.rootarch.rsagia.db.tables.Dataset;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.DatasetCount;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.DatasetImagePaths;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.Experiment;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.Organism;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.Program;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.ProgramDependency;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.ProgramRun;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.SavedConfig;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.Seed;
import org.danforthcenter.genome.rootarch.rsagia.db.tables.User;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RsaGia extends SchemaImpl {

    private static final long serialVersionUID = 1967422678;

    /**
     * The reference instance of <code>rsa_gia</code>
     */
    public static final RsaGia RSA_GIA = new RsaGia();

    /**
     * The table <code>rsa_gia.dataset</code>.
     */
    public final Dataset DATASET = org.danforthcenter.genome.rootarch.rsagia.db.tables.Dataset.DATASET;

    /**
     * The table <code>rsa_gia.dataset_count</code>.
     */
    public final DatasetCount DATASET_COUNT = org.danforthcenter.genome.rootarch.rsagia.db.tables.DatasetCount.DATASET_COUNT;

    /**
     * The table <code>rsa_gia.dataset_image_paths</code>.
     */
    public final DatasetImagePaths DATASET_IMAGE_PATHS = org.danforthcenter.genome.rootarch.rsagia.db.tables.DatasetImagePaths.DATASET_IMAGE_PATHS;

    /**
     * The table <code>rsa_gia.experiment</code>.
     */
    public final Experiment EXPERIMENT = org.danforthcenter.genome.rootarch.rsagia.db.tables.Experiment.EXPERIMENT;

    /**
     * The table <code>rsa_gia.organism</code>.
     */
    public final Organism ORGANISM = org.danforthcenter.genome.rootarch.rsagia.db.tables.Organism.ORGANISM;

    /**
     * The table <code>rsa_gia.program</code>.
     */
    public final Program PROGRAM = org.danforthcenter.genome.rootarch.rsagia.db.tables.Program.PROGRAM;

    /**
     * The table <code>rsa_gia.program_dependency</code>.
     */
    public final ProgramDependency PROGRAM_DEPENDENCY = org.danforthcenter.genome.rootarch.rsagia.db.tables.ProgramDependency.PROGRAM_DEPENDENCY;

    /**
     * The table <code>rsa_gia.program_run</code>.
     */
    public final ProgramRun PROGRAM_RUN = org.danforthcenter.genome.rootarch.rsagia.db.tables.ProgramRun.PROGRAM_RUN;

    /**
     * The table <code>rsa_gia.saved_config</code>.
     */
    public final SavedConfig SAVED_CONFIG = org.danforthcenter.genome.rootarch.rsagia.db.tables.SavedConfig.SAVED_CONFIG;

    /**
     * The table <code>rsa_gia.seed</code>.
     */
    public final Seed SEED = org.danforthcenter.genome.rootarch.rsagia.db.tables.Seed.SEED;

    /**
     * The table <code>rsa_gia.user</code>.
     */
    public final User USER = org.danforthcenter.genome.rootarch.rsagia.db.tables.User.USER;

    /**
     * No further instances allowed
     */
    private RsaGia() {
        super("rsa_gia", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Dataset.DATASET,
            DatasetCount.DATASET_COUNT,
            DatasetImagePaths.DATASET_IMAGE_PATHS,
            Experiment.EXPERIMENT,
            Organism.ORGANISM,
            Program.PROGRAM,
            ProgramDependency.PROGRAM_DEPENDENCY,
            ProgramRun.PROGRAM_RUN,
            SavedConfig.SAVED_CONFIG,
            Seed.SEED,
            User.USER);
    }
}
